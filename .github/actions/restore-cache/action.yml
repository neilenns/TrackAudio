name: Restore cached files
description: Restores backend, vcpkg, and electron-builder from cache

inputs:
  backend:
    description: 'Set to true to cache backend'
    required: false
    default: 'false'

outputs:
  backend:
    description: True if backend was restored from cache
    value: ${{ steps.backend.outputs.cache-hit }}
  vcpkg:
    description: True if vcpkg was restored from cache
    value: ${{ steps.vcpkg.outputs.cache-hit }}
  electron-builder:
    description: True if electron-builder was restored from cache
    value: ${{ steps.electron-builder.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Get afv-native submodule revision (windows)
      if: matrix.os == 'windows-2019'
      shell: pwsh
      run: |
        $AFVNATIVE_REV = & git rev-parse HEAD:./backend/extern/afv-native
        echo "AFVNATIVE_REV=$AFVNATIVE_REV" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "afv-native submodule revision $AFVNATIVE_REV"

    - name: Get afv-native submodule revision (macos and linux)
      if: matrix.os != 'windows-2019'
      shell: bash
      run: |
        AFVNATIVE_REV=$(git rev-parse HEAD:./backend/extern/afv-native)
        echo "AFVNATIVE_REV=$AFVNATIVE_REV" >> $GITHUB_ENV
        echo "afv-native submodule revision $AFVNATIVE_REV"

    # The cache key for backend has to be constructed differently on windows vs
    # macos/linux because hashFiles doesn't work on windows if you specify `backend/**`.
    - name: Set backend cache key (windows)
      if: matrix.os == 'windows-2019'
      shell: pwsh
      run: echo "BACKEND_CACHE_KEY=${{ runner.os }}-backend-${{ hashFiles('backend\\**') }}-${{ env.AFVNATIVE_REV }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Set backend cache key (macos and linux)
      if: matrix.os != 'windows-2019'
      shell: bash
      run: echo "BACKEND_CACHE_KEY=${{ runner.os }}-backend-${{ hashFiles('backend/**') }}-${{ env.AFVNATIVE_REV }}" >> $GITHUB_ENV

    # backend is cached based on the SHA of backend and the hash of all files under
    # backend/. It only gets cached if backend is set to 'true' when calling this composite
    # action, currently only in the ci.yml flow. release.yml does not cache backend.
    - name: Restore backend from cache
      id: backend
      uses: actions/cache@v4
      if: ${{ inputs.backend }} == 'true'
      with:
        path: |
          backend/trackaudio-afv-1.0.0.tgz
        key: ${{ env.BACKEND_CACHE_KEY }}

    - name: Get vcpkg submodule revision (windows)
      if: matrix.os == 'windows-2019'
      shell: pwsh
      run: |
        $VCPKG_REV = & git rev-parse HEAD:./backend/vcpkg
        echo "VCPKG_REV=$VCPKG_REV" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "vcpkg submodule revision $VCPKG_REV"

    - name: Get vcpkg submodule revision (macos and linux)
      if: matrix.os != 'windows-2019'
      shell: bash
      run: |
        VCPKG_REV=$(git rev-parse HEAD:./backend/vcpkg)
        echo "VCPKG_REV=$VCPKG_REV" >> $GITHUB_ENV
        echo "vcpkg submodule revision $VCPKG_REV"

    - name: Restore vcpkg from cache
      uses: actions/cache@v4
      if: steps.backend.outputs.cache-hit != 'true'
      with:
        path: |
          backend/vcpkg
          backend/build/vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('backend/vcpkg.json')}}-${{ env.VCPKG_REV }}

    - name: Restore electron-builder cache
      id: electron-builder
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.ELECTRON_CACHE }}
          ${{ env.ELECTRON_BUILDER_CACHE}}
        key: ${{ runner.os }}-electron-builder-${{ hashFiles('./package-lock.json') }}
