name: Restore cached files
description: Restores backend, vcpkg, and electron-builder from cache

inputs:
  backend:
    description: Set to true to cache backend
    required: false
    default: 'false'

outputs:
  afv-native:
    description: True if afv-native was restored from cache
    value: ${{ steps.afv-native.outputs.cache-hit }}
  backend:
    description: True if backend was restored from cache
    value: ${{ steps.backend.outputs.cache-hit }}
  afv-native:
    description: True if libuiohook was restored from cache
    value: ${{ steps.libuiohook.outputs.cache-hit }}
  electron-builder:
    description: True if electron-builder was restored from cache
    value: ${{ steps.electron-builder.outputs.cache-hit }}
  vcpkg:
    description: True if vcpkg was restored from cache
    value: ${{ steps.vcpkg.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    # The cache folder for electron and electron-builder is different across the three platforms.
    # Furthermore, the ELECTRON_CACHE and ELECTRON_BUILDER_CACHE environment variables don't work.
    # So there has to be separate steps for the different platforms to set the proper cache locations,
    # which were determined by looking at the code here:
    # https://github.com/develar/app-builder/blob/c87157ae504895a7e9e1329437293846b8e57beb/pkg/download/artifactDownloader.go#L195
    - name: Set Electron cache paths (macos and linux)
      if: matrix.os != 'windows-2019'
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          echo "ELECTRON_CACHE_DIR=$HOME/.cache/electron" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE_DIR=$HOME/.cache/electron-builder" >> $GITHUB_ENV
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          echo "ELECTRON_CACHE_DIR=$HOME/Library/Caches/electron" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE_DIR=$HOME/Library/Caches/electron-builder" >> $GITHUB_ENV
        fi

    - name: Set Electron cache paths (Windows)
      if: matrix.os == 'windows-2019'
      shell: pwsh
      run: |
        echo "ELECTRON_CACHE_DIR=$Env:LOCALAPPDATA\electron\Cache" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "ELECTRON_BUILDER_CACHE_DIR=$Env:LOCALAPPDATA\electron-builder\Cache" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    # Get the afv-native submodule revision to use as the cache key for restoring afv-native.
    - name: Get afv-native submodule revision
      shell: bash
      run: |
        AFVNATIVE_REV=$(git rev-parse HEAD:./backend/extern/afv-native)
        echo "AFVNATIVE_REV=$AFVNATIVE_REV" >> $GITHUB_ENV
        echo "afv-native submodule revision $AFVNATIVE_REV"

    # Get the vcpkg submodule revision to use as the cache key for restoring vcpkg.
    - name: Get vcpkg submodule revision
      shell: bash
      run: |
        VCPKG_REV=$(git rev-parse HEAD:./backend/vcpkg)
        echo "VCPKG_REV=$VCPKG_REV" >> $GITHUB_ENV
        echo "vcpkg submodule revision $VCPKG_REV"

    # Get the libuiohook submodule revision to use as the cache key for restoring libuiohook.
    - name: Get libuiohook submodule revision
      shell: bash
      run: |
        LIBUIOHOOK_REV=$(git rev-parse HEAD:./backend/extern/libuiohook)
        echo "LIBUIOHOOK_REV=$LIBUIOHOOK_REV" >> $GITHUB_ENV
        echo "libuiohook submodule revision $LIBUIOHOOK_REV"

    # The cache key for backend has to be constructed differently on windows vs
    # macos/linux because hashFiles doesn't work on windows if you specify `backend/**`.
    # backend is cached based on the SHA of backend and the hash of all files under
    # backend/.
    - name: Set backend cache key (windows)
      if: matrix.os == 'windows-2019'
      shell: pwsh
      run: echo "BACKEND_CACHE_KEY=${{ runner.os }}-backend-${{ hashFiles('backend\\**') }}-${{ env.AFVNATIVE_REV }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Set backend cache key (macos and linux)
      if: matrix.os != 'windows-2019'
      shell: bash
      run: echo "BACKEND_CACHE_KEY=${{ runner.os }}-backend-${{ hashFiles('backend/**') }}-${{ env.AFVNATIVE_REV }}" >> $GITHUB_ENV

    - name: Restore electron-builder cache
      id: electron-builder
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.ELECTRON_CACHE_DIR }}
          ${{ env.ELECTRON_BUILDER_CACHE_DIR }}
        key: ${{ runner.os }}-electron-builder-${{ hashFiles('package-lock.json') }}

    # The backend only gets cached if backend is set to 'true' when calling this composite
    # action, currently only in the ci.yml flow. release.yml does not cache backend.
    - name: Restore backend from cache
      id: backend
      uses: actions/cache@v4
      if: ${{ inputs.backend }} == 'true'
      with:
        path: |
          backend/trackaudio-afv-1.0.0.tgz
        key: ${{ env.BACKEND_CACHE_KEY }}

    # The remaining native components (afv-native, vcpkg, and libuiohook) only get restored
    # if the backend cache wasn't found. That's because if the backend cache is found there's
    # no native build at all, so no need to restore the caches for the native components.
    - name: Restore afv-native from cache
      id: afv-native
      uses: actions/cache@v4
      if: steps.backend.outputs.cache-hit != 'true'
      with:
        path: |
          backend/extern/afv-native
        key: ${{ runner.os }}-afv-native-${{ env.VCPKG_REV }}

    - name: Restore vcpkg from cache
      id: vcpkg
      uses: actions/cache@v4
      if: steps.backend.outputs.cache-hit != 'true'
      with:
        path: |
          backend/vcpkg
          backend/build/vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('backend/vcpkg.json')}}-${{ env.VCPKG_REV }}

    - name: Restore libuiohook from cache
      id: libuiohook
      uses: actions/cache@v4
      if: steps.backend.outputs.cache-hit != 'true'
      with:
        path: |
          backend/extern/libuiohook
        key: ${{ runner.os }}-libuiohook-${{ env.LIBUIOHOOK_REV }}
